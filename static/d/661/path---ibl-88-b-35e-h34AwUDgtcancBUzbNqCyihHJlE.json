{"data":{"site":{"siteMetadata":{"title":"Bruno Opsenica's Blog","author":"Bruno Opsenica"}},"markdownRemark":{"id":"d78bebad-3d40-5b4b-ac0f-494f525269a7","excerpt":"TODO Introduce IBL problem using rendering equation Talk about difficulty performing monte carlo integration naively Talk about solution of importance sampling…","html":"<h2>TODO</h2>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Introduce IBL problem using rendering equation</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Talk about difficulty performing monte carlo integration naively</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> Talk about solution of importance sampling</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Introduce past work from Karis on solving the equation offline</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> Talk about problem with single single scattering as roughness increases</p>\n<ul>\n<li>Furnace test</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Talk about recent attempts to address problem, introduce Fdez Aguera</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Show implementation</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Show comparisons for furnace and in pisa</li>\n</ul>\n<h2>Introduction and Background</h2>\n<p>Recently I decided to implement image based lighting in BGFX, since I had never implemented image based lighting before and it’s a great way to get assets authored for PBR looking really great. Additionally, I knew that the task was not trivial from reading <a href=\"\">Karis’s 2014 paper</a> explaining Unreal’s PBR implementation in order to implement discrete analytical lights. I’ll discuss the challenge more later, but let’s first introduce the problem a bit more formally. Let’s consider equation for evaluating the reflectance of an opaque surface:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>o</mi></msub><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><mo>=</mo><msub><mo>∫</mo><mi mathvariant=\"normal\">Ω</mi></msub><msub><mi>f</mi><mtext>brdf</mtext></msub><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><mo>⟨</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><mi mathvariant=\"bold\">l</mi><mo>⟩</mo><mi>d</mi><mi mathvariant=\"bold\">l</mi></mrow><annotation encoding=\"application/x-tex\">L_o(\\mathbf{v}, \\mathbf{p}) = \\int_{\\Omega} f_{\\text{brdf}}(\\mathbf{v}, \\mathbf{l}, \\mathbf{p}) L_i(\\mathbf{l}, \\mathbf{p}) \\langle\\mathbf{n} \\cdot \\mathbf{l}\\rangle d\\mathbf{l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">o</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27195em;vertical-align:-0.9119499999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.433619em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">Ω</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119499999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">brdf</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mclose\">⟩</span><span class=\"mord mathdefault\">d</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span></span></span></span></span>\n<p>Where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">v</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span></span></span></span> is our viewing angle, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>f</mi><mtext>brdf</mtext></msub><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">f_{\\text{brdf}}(\\mathbf{v}, \\mathbf{l}, \\mathbf{p})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">brdf</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span></span></span></span> is our bidirectional reflectance distribution function, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">L_i(\\mathbf{l}, \\mathbf{p})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span></span></span></span> is the radiance incident on point <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63888em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span></span></span></span> from direction <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>−</mo><mi mathvariant=\"bold\">l</mi></mrow><annotation encoding=\"application/x-tex\">-\\mathbf{l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">n</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span></span></span></span> is the normal vector at point <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{p}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.63888em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span></span></span></span>.</p>\n<p>For our BRDF we will use the popular Cook-Torrance microfacet model:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>f</mi><mtext>brdf</mtext></msub><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">l</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>D</mi><mo>(</mo><mi mathvariant=\"bold\">h</mi><mo>)</mo><mi>F</mi><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo>⋅</mo><mi mathvariant=\"bold\">h</mi><mo>)</mo><mi>G</mi><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">h</mi><mo>)</mo></mrow><mrow><mn>4</mn><mo>⟨</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><mi mathvariant=\"bold\">l</mi><mo>⟩</mo><mo>⟨</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><mi mathvariant=\"bold\">v</mi><mo>⟩</mo></mrow></mfrac><mo>+</mo><msub><mi>f</mi><mtext>diffuse</mtext></msub></mrow><annotation encoding=\"application/x-tex\">f_{\\text{brdf}}(\\mathbf{v}, \\mathbf{l}) =\n    \\frac{\n        D(\\mathbf{h}) F(\\mathbf{v}\\cdot\\mathbf{h}) G(\\mathbf{v},\\mathbf{l},\\mathbf{h})\n    }{\n        4 \\langle\\mathbf{n}\\cdot\\mathbf{l}\\rangle \\langle\\mathbf{n}\\cdot\\mathbf{v}\\rangle\n    } + f_{\\text{diffuse}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">brdf</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mclose\">⟩</span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mclose\">⟩</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">G</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">diffuse</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">h</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{h}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span></span></span></span> is the halfway vector, halfway between <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">l</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">v</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span></span></span></span>. This direction is important, as <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span>, our normal distribution function (NDF) tells use what proportion of the microfacets have normals aligned with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">h</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{h}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span></span></span></span>, therefore reflecting the light from <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>−</mo><mi mathvariant=\"bold\">l</mi></mrow><annotation encoding=\"application/x-tex\">-\\mathbf{l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span></span></span></span> in the direction <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">v</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span></span></span></span>. For more detail on this model, there are many resources but <a href=\"https://blog.selfshadow.com/publications/s2013-shading-course/hoffman/s2013_pbs_physics_math_slides.pdf\">Naty Hoffman’s talk</a> from this <a href=\"https://blog.selfshadow.com/publications/s2013-shading-course/\">2013 Siggraph workshop</a> is very helpful in explaining this BRDF if you’ve never seen it before. There’s also <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>f</mi><mtext>diffuse</mtext></msub></mrow><annotation encoding=\"application/x-tex\">f_{\\text{diffuse}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">diffuse</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, which is a Lambertian diffuse term which I’ll go into later. We’ll be focusing mostly on the specular term for this post.</p>\n<p>To make sure there’s no ambiguity, we’re using the following functions for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span>, and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span></span></span></span>. For the normal distribution function <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span>, we’re using <a href=\"\">Disney’s GGX</a>:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mo>(</mo><mi mathvariant=\"bold\">h</mi><mo>)</mo><mo>=</mo><mfrac><msup><mi>α</mi><mn>2</mn></msup><mrow><mi>π</mi><mo>(</mo><mo>(</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><mi mathvariant=\"bold\">h</mi><msup><mo>)</mo><mn>2</mn></msup><mo>(</mo><msup><mi>α</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mn>1</mn><msup><mo>)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">D(\\mathbf{h}) = \\frac{\n    \\alpha^2\n}{\n    \\pi ((\\mathbf{n}\\cdot\\mathbf{h})^2(\\alpha^2 - 1) + 1)^2\n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.427108em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi><mo>=</mo><msup><mtext>roughness</mtext><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\alpha = \\text{roughness}^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0928879999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">roughness</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8984479999999999em;\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>. Roughness, AKA perceptually linear roughness, will be an input into our shading model, stored as a channel in our textures.</p>\n<p>Meanwhile, for our geometric shadowing/attenuation term <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">G</span></span></span></span> we’re using the</p>\n<p>TODO: Finish writing up the BRDF info.</p>\n<p>Okay, so that’s our BRDF and the rendering equation we’re trying to solve for every pixel we evaluate for our mesh. Let’s turn our attention now to the hemisphere <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"normal\">Ω</mi></mrow><annotation encoding=\"application/x-tex\">\\Omega</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Ω</span></span></span></span> we need to integrate across. In order to do so, we need to be able to evaluate <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">L_i(\\mathbf{l}, \\mathbf{p})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span></span></span></span> for any given <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">l</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span></span></span></span>. In real time applications, we have two approaches, often used together:</p>\n<ol>\n<li>Describe <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">L_i(\\mathbf{l}, \\mathbf{p})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span></span></span></span> using a set of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span></span> analytical lights. Then, we only need to evaluate the integral N times, for each corresponding light direction <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>.</li>\n<li>Describe <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">L_i(\\mathbf{l}, \\mathbf{p})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span></span></span></span> using an <em>environment map</em>, often using a <a href=\"https://en.wikipedia.org/wiki/Cube_mapping\"><em>cube map</em></a>.</li>\n</ol>\n<p>We’ll be focused on item 2 in this post. While an environment map can provide much more realistic lighting, the naive evaluation of our hemispherical integral is not going to cut it for interactive computer graphics. To gain a quick understanding of the challenges involved, consider the following:</p>\n<ul>\n<li>With a typical microfacet model we have both specular and diffuse lobes.</li>\n<li>The lambertian lobe is dependent on light incoming from every part of our hemisphere.</li>\n<li>For the specular lobe, our roughness will determine what parts of the hemisphere are most important.</li>\n<li>To sample the hemisphere naively, we’ll need potentially hundreds/thousands of texture reads.</li>\n<li>Additionally, each sample will require evaluation of the BRDF, which for the specular component, is not cheap.</li>\n</ul>\n<p>Doing this all with every draw call is not going to cut it for anything but the simplest of scenes. Additionally, sometimes we’ll be redoing work — for instance, calculating the diffuse irradiance for each direction really only needs to happen once for each environment map!</p>\n<p>So instead of doing all that in every frame, we’re going to try to pre-compute as many parts of the integral as possible. In order to do so, we’ll need to identify what we can precalculate and have to make some approximations!</p>\n<h2>Importance Sampling</h2>\n<p>In order to integrate our radiance equation, we’ll need to numerically integrate across our hemisphere. Using the Monte Carlo with importance sampling will provide the following equation:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo>∫</mo><mi mathvariant=\"normal\">Ω</mi></msub><msub><mi>f</mi><mtext>brdf</mtext></msub><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><mi mathvariant=\"bold\">l</mi><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><mo>⟨</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><mi mathvariant=\"bold\">l</mi><mo>⟩</mo><mi>d</mi><mi mathvariant=\"bold\">l</mi><mo>≈</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mrow><msub><mi>f</mi><mtext>brdf</mtext></msub><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><mo>⟨</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo>⟩</mo></mrow><mrow><mtext>pdf</mtext><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo>)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\int_{\\Omega} f_{\\text{brdf}}(\\mathbf{v}, \\mathbf{l}, \\mathbf{p}) L_i(\\mathbf{l}, \\mathbf{p}) \\langle\\mathbf{n} \\cdot \\mathbf{l}\\rangle d\\mathbf{l}\n\\approx\n\\frac{1}{N} \\sum_{i=1}^{N} \\frac{f_{\\text{brdf}}(\\mathbf{v}, \\mathbf{l}_k, \\mathbf{p}) L_i(\\mathbf{l}_k, \\mathbf{p}) \\langle\\mathbf{n} \\cdot \\mathbf{l}_k\\rangle}{\\text{pdf}(\\mathbf{v}, \\mathbf{l}_k)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.27195em;vertical-align:-0.9119499999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.433619em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">Ω</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119499999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">brdf</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mclose\">⟩</span><span class=\"mord mathdefault\">d</span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.106005em;vertical-align:-1.277669em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">pdf</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">brdf</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">⟩</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>Where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mtext>pdf</mtext><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{pdf}(\\mathbf{v}, \\mathbf{l}_k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">pdf</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> is the probability distribution function we use for sampling our hemisphere. Intuitively, the idea behind having the PDF in the denominator is that if a direction is more likely to be sampled than others, it should contribute less to the sum than a direction that is incredibly unlikely to be chosen.</p>\n<p>We could naively sample our hemisphere randomly, but at low roughness our specular component will converge to the actual solution very slowly. The same is true if we attempt to sample our hemisphere uniformly. To reason about this, consider a roughness close to zero, which corresponds to a perfect reflector. In this case, the only light direction that matters is the direction of perfect reflection <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">l</mi><mtext>reflection</mtext></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l}_{\\text{reflection}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">reflection</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> from <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">v</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span></span></span></span> based on <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">n</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span></span></span></span>. <em>Every other direction will contribute nothing to our sum</em>. And if we do manage to sample <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">l</mi><mtext>reflection</mtext></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l}_{\\text{reflection}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">reflection</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, we still won’t converge due to the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mn>1</mn><mi>N</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> term. At hight roughness, this is less of a factor as the distribution of our microfacet normals will increase, and we’ll have to consider most parts of our hemisphere.</p>\n<p>So instead, we’ll choose a PDF that resembles our BRDF in order to decrease the variance. We’ll actually choose our Normal Distribution Function <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> as our PDF, the reasoning being that the NDF determines which directions contribute the most to the light leaving our larger surface patch. More correctly, we’ll actually be sampling <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mo>(</mo><mi mathvariant=\"bold\">h</mi><mo>)</mo><mo>(</mo><mi mathvariant=\"bold\">h</mi><mo>⋅</mo><mi mathvariant=\"bold\">n</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">D(\\mathbf{h}) ( \\mathbf{h} \\cdot \\mathbf{n} )</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mclose\">)</span></span></span></span>, since <a href=\"\">this is how the normal distribution is actually defined</a>:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mo>∫</mo><mi mathvariant=\"normal\">Ω</mi></msub><mi>D</mi><mo>(</mo><mi mathvariant=\"bold\">h</mi><mo>)</mo><mo>(</mo><mi mathvariant=\"bold\">h</mi><mo>⋅</mo><mi mathvariant=\"bold\">n</mi><mo>)</mo><mi>d</mi><msub><mi mathvariant=\"bold\">l</mi><mi>h</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\int_\\Omega D(\\mathbf{h}) ( \\mathbf{h} \\cdot \\mathbf{n} ) d\\mathbf{l}_h = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.27195em;vertical-align:-0.9119499999999999em;\"></span><span class=\"mop\"><span class=\"mop op-symbol large-op\" style=\"margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;\">∫</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:-0.433619em;\"><span style=\"top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">Ω</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9119499999999999em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mclose\">)</span><span class=\"mord mathdefault\">d</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span>\n<p>You can also read the <a href=\"http://www.cs.cornell.edu/~srm/publications/EGSR07-btdf.pdf\">Walter et al. 2007</a> paper on this if you’d like more detail. It’s a useful paper.</p>\n<p>I also want to note that we won’t be sampling <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">l</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span></span></span></span> directly and instead we’ll sample our microfacet normal <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">h</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{h}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">h</span></span></span></span></span>, treating each microfacet as a perfect reflector to find the relevant <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">l</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span></span></span></span>. To do so, we’ll need to map two uniformly random variables in the interval <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">[0, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>, let’s call them <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ξ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>ξ</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\xi_1, \\xi_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ϕ</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> in spherical coordinates. Then, we can turn our <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϕ</mi><mo separator=\"true\">,</mo><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi, \\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ϕ</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> into a cartesian direction <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">h</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{h}_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">h</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> in world space. We can then use this to find <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">l</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">l</span></span></span></span></span> to sample our environment map to evaluate <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">L_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>.</p>\n<p>The mapping from <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ξ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>ξ</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\xi_1, \\xi_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ϕ</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> won’t be derived here, but <a href=\"https://www.tobias-franke.eu/log/2014/03/30/notes_on_importance_sampling.html\">Tobias Franke</a> and <a href=\"https://agraphicsguy.wordpress.com/2015/11/01/sampling-microfacet-brdf/\">AGraphicsGuy</a> have good blog posts that break this down step by step. The final result are the following equations:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϕ</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mi>π</mi><mo>∗</mo><msub><mi>ξ</mi><mn>1</mn></msub><mi>θ</mi><mo>=</mo><mi>arccos</mi><mo>⁡</mo><msqrt><mfrac><mrow><mn>1</mn><mo>−</mo><msub><mi>ξ</mi><mn>2</mn></msub></mrow><mrow><msub><mi>ξ</mi><mn>2</mn></msub><mo>(</mo><msup><mi>α</mi><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo>)</mo><mo>+</mo><mn>1</mn></mrow></mfrac></msqrt></mrow><annotation encoding=\"application/x-tex\">\\phi = 2 * \\pi * \\xi_1\n\\theta = \\arccos \\sqrt{\\frac{1 - \\xi_2}{\\xi_2(\\alpha^2 - 1) + 1}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ϕ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.04em;vertical-align:-1.1884050000000004em;\"></span><span class=\"mop\">arccos</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8515949999999997em;\"><span class=\"svg-align\" style=\"top:-5em;\"><span class=\"pstrut\" style=\"height:5em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.8115949999999996em;\"><span class=\"pstrut\" style=\"height:5em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:3.08em;\"><svg width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793c339.3,-1799.3,509.3,-2700,510,-2702\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\nM1001 80H400000v40H1017z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1884050000000004em;\"><span></span></span></span></span></span></span></span></span></span>\n<p>Note that this assumes we’re restricting ourselves to an isotropic version of the GGX, which is why the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ϕ</span></span></span></span> term is just randomly sampled. Note the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span> term in our equation for <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding=\"application/x-tex\">\\phi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">ϕ</span></span></span></span>, but it may not be obvious how this dependency causes the equation to behave. I created a <a href=\"https://www.desmos.com/calculator/ueuitucusv\">little desmos demo</a> that you can play around with to get a sense of how this maps our <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ξ</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\xi_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>. Notice that at low roughnesses, most of the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">[0, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> range will map to a small <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span>, while at larger roughnesses we approach a standard cosine distribution, and we’re much more likely to get larger angles.</p>\n<p>Okay so, we now have a method of importance sampling for the entire range of roughness values. Here’s some GLSL code that shows how we could sample a quasi-random direction <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"bold\">l</mi><mi mathvariant=\"bold\">i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbf{l_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathbf mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span>:</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token comment\">// Taken from https://github.com/SaschaWillems/Vulkan-glTF-PBR/blob/master/data/shaders/genbrdflut.frag</span>\n<span class=\"token comment\">// Based on http://holger.dammertz.org/stuff/notes_HammersleyOnHemisphere.html</span>\n<span class=\"token keyword\">vec2</span> <span class=\"token function\">hammersley</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">uint</span> i<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint</span> N<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">uint</span> bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token number\">16u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span><span class=\"token operator\">></span> <span class=\"token number\">16u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x55555555u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token number\">1u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xAAAAAAAAu</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token operator\">></span> <span class=\"token number\">1u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x33333333u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token number\">2u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xCCCCCCCCu</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token operator\">></span> <span class=\"token number\">2u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0F0F0F0Fu</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token number\">4u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xF0F0F0F0u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token operator\">></span> <span class=\"token number\">4u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bits <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x00FF00FFu</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">&lt;</span> <span class=\"token number\">8u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF00FF00u</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span><span class=\"token operator\">></span> <span class=\"token number\">8u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> rdi <span class=\"token operator\">=</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2.3283064365386963e-10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Based on Karis 2014</span>\n<span class=\"token keyword\">vec3</span> <span class=\"token function\">importanceSampleGGX</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">vec2</span> Xi<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> roughness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> N<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">float</span> a <span class=\"token operator\">=</span> roughness <span class=\"token operator\">*</span> roughness<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Sample in spherical coordinates</span>\n    <span class=\"token keyword\">float</span> phi <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">*</span> PI <span class=\"token operator\">*</span> Xi<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> cosTheta <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> Xi<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> a <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Xi<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> sinTheta <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> cosTheta <span class=\"token operator\">*</span> cosTheta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Construct tangent space vector</span>\n    <span class=\"token keyword\">vec3</span> H<span class=\"token punctuation\">;</span>\n    H<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> sinTheta <span class=\"token operator\">*</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>phi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    H<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> sinTheta <span class=\"token operator\">*</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>phi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    H<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> cosTheta<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Tangent to world space</span>\n    <span class=\"token keyword\">vec3</span> upVector <span class=\"token operator\">=</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.999</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> tangentX <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">cross</span><span class=\"token punctuation\">(</span>upVector<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> tangentY <span class=\"token operator\">=</span> <span class=\"token function\">cross</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> tangentX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> tangentX <span class=\"token operator\">*</span> H<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> tangentY <span class=\"token operator\">*</span> H<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> N <span class=\"token operator\">*</span> H<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>One thing in the above code I did not touch on at all is the Hammersley sequence, which is the method by which we create our random numbers <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>ξ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>ξ</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\xi_1, \\xi_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.04601em;\">ξ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04601em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. It’s a low-discrepancy sequence that I won’t do any justice describing, so here’s a <a href=\"https://en.wikipedia.org/wiki/Low-discrepancy_sequence#Hammersley_set\">wikipedia link</a>.</p>\n<p>Now that we can importance sample our hemisphere, we can now turn our attention back to the radiance equation and see which bits we can calculate and store to cut down on the amount of work we need to do each frame.</p>\n<h2>Split Sum Approximation</h2>\n<p>In <a href=\"\">Karis’s presentation on the Unreal Engine PBR pipeline</a>, he explains that we can actually approximate the specular part of our radiance sum by splitting it in two:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mrow><msub><mi>f</mi><mi>s</mi></msub><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><mo>⟨</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo>⟩</mo></mrow><mrow><mtext>pdf</mtext><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo>)</mo></mrow></mfrac><mo>≈</mo><mrow><mo fence=\"true\">(</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>L</mi><mi>i</mi></msub><mo>(</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mrow><msub><mi>f</mi><mi>s</mi></msub><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo separator=\"true\">,</mo><mi mathvariant=\"bold\">p</mi><mo>)</mo><mo>⟨</mo><mi mathvariant=\"bold\">n</mi><mo>⋅</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo>⟩</mo></mrow><mrow><mtext>pdf</mtext><mo>(</mo><mi mathvariant=\"bold\">v</mi><mo separator=\"true\">,</mo><msub><mi mathvariant=\"bold\">l</mi><mi>k</mi></msub><mo>)</mo></mrow></mfrac><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{N} \\sum_{i=1}^{N}\n\\frac{\n    f_s(\\mathbf{v}, \\mathbf{l}_k, \\mathbf{p}) L_i(\\mathbf{l}_k, \\mathbf{p}) \\langle\\mathbf{n} \\cdot \\mathbf{l}_k\\rangle\n}{\n    \\text{pdf}(\\mathbf{v}, \\mathbf{l}_k)\n} \\approx\n    \\left( \\frac{1}{N} \\sum_{i=1}^{N} L_i(\\mathbf{l}_k, \\mathbf{p}) \\right)\n    \\left( \\frac{1}{N} \\sum_{i=1}^{N} \\frac{f_s(\\mathbf{v}, \\mathbf{l}_k, \\mathbf{p}) \\langle\\mathbf{n} \\cdot \\mathbf{l}_k\\rangle}{\\text{pdf}(\\mathbf{v}, \\mathbf{l}_k)} \\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.106005em;vertical-align:-1.277669em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">pdf</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">⟩</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.106005em;vertical-align:-1.277669em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8283360000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">pdf</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">p</span></span><span class=\"mclose\">)</span><span class=\"mopen\">⟨</span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbf\">l</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">⟩</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span></span></span></span></span>\n<p>As Karis notes, this approximation is exact for a constant <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">L_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> term, and reasonable for “common environments”. The way this approximation helps us is that we can store the two different sums separately!</p>\n<h3>Pre-filtered Environment Map</h3>\n<p>The first sum is what’s commonly referred to as the “Pre-filtered Environment Map” or just the “radiance map” in other papers. When we say “pre-filtering”, what we’re actually doing is evaluating and storing a value such that when we go to render our mesh, we can simply sample this stored value to obtain <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">L_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. The idea is that we can skip having to integrate across our hemisphere in order to figure out the incident radiance on our point. Interestingly, Karis and others convolve this integral with the GGX by still using the GGX based importance sampling. This improves convergence, which is important if you’re planning on having your environment map change over time and need to re-evaluate it outside the context of an offline pipeline. However, one big problem with this is that the GGX NDF is dependent on <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">v</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span></span></span></span> — which creates “stretchy” reflections. Karis approximates the NDF as <em>isotropic</em> where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"bold\">n</mi><mo>=</mo><mi mathvariant=\"bold\">v</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbf{n} = \\mathbf{v}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">n</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.44444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbf\" style=\"margin-right:0.01597em;\">v</span></span></span></span></span>. This is a much larger source of error than the split sum, and is demonstrated by the figure below:</p>\n<!-- ![Left: Reflections produced by Isotropic approximation. Right: Reference with standard GGX NDF.](./isotropic_error.png) -->\n<p>Notice the anisotropic reflections on the right that we lose with the approximation. Taken from the <a href=\"https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\"><em>Moving Frostbite to PBR</em> course notes.</a></p>\n<p>We can further improve the rate of convergence by filtering our <em>samples</em> as well. The idea is described in detail in <a href=\"https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch20.html\">Křivánek and Colbert’s GPU Gems article</a> and I will provide a quick summary. When using our importance sampling routine, we evaluate the PDF value for the sample, and if it is “small” then this corresponds to a direction we sample infrequently. As a result, we can model this as sampling a larger solid angle in our hemisphere. The inverse is also true: samples with higher PDF valuees will correspond to smaller solid angles. But how do we sample a larger or small solid angle in our environment without just having to integrate again? Well we can use the mip map chain of the environment map! It’s a very clever trick, and it lets us use even fewer samples.</p>\n<p>When it comes to storing the pre-filtered environment map, it’s important to note once again that we’re creating a different map for different roughness levels of our choosing. Since we’ll lose high frequency information as roughness increases, we can actually use mip map layers to store the filtered map, with higher roughnesses corresponding to higher mip levels.</p>\n<p>In BGFX, I implemented this using compute shaders, with a different pass for each roughness/mip level. To perform this on a cubemap, I’m using thread groups with a third dimension corresponding to a face of the cube. I’m not certain this is actually a good idea as it result in poor coherency, but I didn’t have time to benchmark against just dispatching a different job for each face. This is left as an exercise for the reader.</p>\n<p>Here’s the dead simple loop used in the application code to issue each dispatch call:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// width is the width/length of a single face of our cube map</span>\n<span class=\"token keyword\">float</span> maxMipLevel <span class=\"token operator\">=</span> bx<span class=\"token operator\">::</span><span class=\"token function\">log2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> mipLevel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> mipLevel <span class=\"token operator\">&lt;=</span> maxMipLevel<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>mipLevel<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">uint16_t</span> mipWidth <span class=\"token operator\">=</span> width <span class=\"token operator\">>></span> <span class=\"token keyword\">uint16_t</span><span class=\"token punctuation\">(</span>mipLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> roughness <span class=\"token operator\">=</span> mipLevel <span class=\"token operator\">/</span> maxMipLevel<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> params<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> roughness<span class=\"token punctuation\">,</span> mipLevel<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    bgfx<span class=\"token operator\">::</span><span class=\"token function\">setUniform</span><span class=\"token punctuation\">(</span>u_params<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Bind the source using a Sampler, so we don't have to perform the cube mapping ourselves</span>\n    bgfx<span class=\"token operator\">::</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> u_sourceCubeMap<span class=\"token punctuation\">,</span> sourceCubeMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Set the image using a specific mipLevel</span>\n    bgfx<span class=\"token operator\">::</span><span class=\"token function\">setImage</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> filteredCubeMap<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint8_t</span><span class=\"token punctuation\">(</span>mipLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bgfx<span class=\"token operator\">::</span>Access<span class=\"token operator\">::</span>Write<span class=\"token punctuation\">,</span> bgfx<span class=\"token operator\">::</span>TextureFormat<span class=\"token operator\">::</span>RGBA16F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Dispatch enough groups to cover the entire _mipped_ face</span>\n    bgfx<span class=\"token operator\">::</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">,</span> preFilteringProgram<span class=\"token punctuation\">,</span> mipWidth <span class=\"token operator\">/</span> threadCount<span class=\"token punctuation\">,</span> mipWidth <span class=\"token operator\">/</span> threadCount<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Then our computer shader looks like the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"glsl\"><pre class=\"language-glsl\"><code class=\"language-glsl\"><span class=\"token preprocessor builtin\">#</span>include <span class=\"token string\">\"bgfx_compute.sh\"</span>\n\n<span class=\"token comment\">// Contains our hammersley sequence and our importance sampling function</span>\n<span class=\"token preprocessor builtin\">#</span>include <span class=\"token string\">\"pbr_helpers.sh\"</span>\n\n<span class=\"token preprocessor builtin\">#define</span> PI <span class=\"token number\">3.141592653589793</span>\n\n<span class=\"token preprocessor builtin\">#define</span> THREADS <span class=\"token number\">8</span>\n<span class=\"token preprocessor builtin\">#define</span> NUM_SAMPLES <span class=\"token number\">64u</span>\n\n<span class=\"token comment\">// u_params.x == roughness</span>\n<span class=\"token comment\">// u_params.y == mipLevel</span>\n<span class=\"token comment\">// u_params.z == imageSize</span>\n<span class=\"token keyword\">uniform</span> <span class=\"token keyword\">vec4</span> u_params<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">SAMPLERCUBE</span><span class=\"token punctuation\">(</span>s_source<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">IMAGE2D_ARRAY_WR</span><span class=\"token punctuation\">(</span>s_target<span class=\"token punctuation\">,</span> rgba16f<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// From Karis, 2014</span>\n<span class=\"token keyword\">vec3</span> <span class=\"token function\">prefilterEnvMap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> roughness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec3</span> R<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> imgSize<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Isotropic approximation: we lose stretchy reflections :(</span>\n    <span class=\"token keyword\">vec3</span> N <span class=\"token operator\">=</span> R<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> V <span class=\"token operator\">=</span> R<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">vec3</span> prefilteredColor <span class=\"token operator\">=</span> <span class=\"token function\">vec3_splat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> totalWeight <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">uint</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0u</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> NUM_SAMPLES<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">vec2</span> Xi <span class=\"token operator\">=</span> <span class=\"token function\">hammersley</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> NUM_SAMPLES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">vec3</span> H <span class=\"token operator\">=</span> <span class=\"token function\">importanceSampleGGX</span><span class=\"token punctuation\">(</span>Xi<span class=\"token punctuation\">,</span> roughness<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> VoH <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">,</span> H<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> NoH <span class=\"token operator\">=</span> VoH<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Since N = V in our approximation</span>\n        <span class=\"token keyword\">vec3</span> L <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">*</span> VoH <span class=\"token operator\">*</span> H <span class=\"token operator\">-</span> V<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> NoL <span class=\"token operator\">=</span> <span class=\"token function\">saturate</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        NoH <span class=\"token operator\">=</span> <span class=\"token function\">saturate</span><span class=\"token punctuation\">(</span>NoH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>NoL <span class=\"token operator\">></span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Based off https://developer.nvidia.com/gpugems/GPUGems3/gpugems3_ch20.html</span>\n            <span class=\"token comment\">// Typically you'd have the following:</span>\n            <span class=\"token comment\">// float pdf = D_GGX(NoH, roughness) * NoH / (4.0 * VoH);</span>\n            <span class=\"token comment\">// but since V = N => VoH == NoH</span>\n            <span class=\"token keyword\">float</span> pdf <span class=\"token operator\">=</span> <span class=\"token function\">D_GGX</span><span class=\"token punctuation\">(</span>NoH<span class=\"token punctuation\">,</span> roughness<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4.0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Solid angle of current sample -- bigger for less likely samples</span>\n            <span class=\"token keyword\">float</span> omegaS <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>NUM_SAMPLES<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pdf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Solid angle  of pixel</span>\n            <span class=\"token keyword\">float</span> omegaP <span class=\"token operator\">=</span> <span class=\"token number\">4.0</span> <span class=\"token operator\">*</span> PI <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">6.0</span> <span class=\"token operator\">*</span> imgSize <span class=\"token operator\">*</span> imgSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">float</span> mipLevel <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> <span class=\"token function\">log2</span><span class=\"token punctuation\">(</span>omegaS <span class=\"token operator\">/</span> omegaP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            prefilteredColor <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">textureCubeLod</span><span class=\"token punctuation\">(</span>s_source<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">,</span> mipLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rgb <span class=\"token operator\">*</span> NoL<span class=\"token punctuation\">;</span>\n            totalWeight <span class=\"token operator\">+</span><span class=\"token operator\">=</span> NoL<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> prefilteredColor <span class=\"token operator\">/</span> totalWeight<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">NUM_THREADS</span><span class=\"token punctuation\">(</span>THREADS<span class=\"token punctuation\">,</span> THREADS<span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">float</span> mipLevel <span class=\"token operator\">=</span> u_params<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> imgSize <span class=\"token operator\">=</span> u_params<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> mipImageSize <span class=\"token operator\">=</span> imgSize <span class=\"token operator\">/</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span> mipLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">ivec3</span> globalId <span class=\"token operator\">=</span> <span class=\"token keyword\">ivec3</span><span class=\"token punctuation\">(</span>gl_GlobalInvocationID<span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>globalId<span class=\"token punctuation\">.</span>x <span class=\"token operator\">>=</span> mipImageSize <span class=\"token operator\">||</span> globalId<span class=\"token punctuation\">.</span>y <span class=\"token operator\">>=</span> mipImageSize<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">vec3</span> R <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">toWorldCoords</span><span class=\"token punctuation\">(</span>globalId<span class=\"token punctuation\">,</span> mipImageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Don't need to integrate for roughness == 0, since it's a perfect reflector</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>u_params<span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">vec4</span> color <span class=\"token operator\">=</span> <span class=\"token function\">textureCubeLod</span><span class=\"token punctuation\">(</span>s_source<span class=\"token punctuation\">,</span> R<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">imageStore</span><span class=\"token punctuation\">(</span>s_target<span class=\"token punctuation\">,</span> globalId<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">vec3</span> color <span class=\"token operator\">=</span> <span class=\"token function\">prefilterEnvMap</span><span class=\"token punctuation\">(</span>u_params<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> R<span class=\"token punctuation\">,</span> imgSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">imageStore</span><span class=\"token punctuation\">(</span>s_target<span class=\"token punctuation\">,</span> globalId<span class=\"token punctuation\">,</span> <span class=\"token keyword\">vec4</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Image Based Lighting","date":"August 10, 2019","description":"A guide to adding image based lighting that uses a multi-scattering"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ibl/","previous":{"fields":{"slug":"/tonemapping/"},"frontmatter":{"title":"Tone Mapping"}},"next":null}}