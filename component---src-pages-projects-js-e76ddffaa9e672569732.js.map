{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["ProjectList","styled","ul","Link","a","ProjectItem","li","media","medium","large","StyledProject","link","imgData","title","href","fluid","childImageSharp","projectsQuery","Projects","query","render","data","tone_mapping","forward","deferred","ibl","shadows","echoes"],"mappings":"mNAQMA,EAAcC,IAAOC,GAAV,wEAAGD,CAAH,4HAWXE,EAAOF,IAAOG,EAAV,iEAAGH,CAAH,wMAoBJI,EAAcJ,IAAOK,GAAV,wEAAGL,CAAH,4FAKbM,IAAMC,OALO,8CASbD,IAAME,MATO,+CA8BXC,EAAgBT,aAXN,SAAC,GAA8B,IAA5BU,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAChC,OACE,kBAACR,EAAD,KACE,kBAACF,EAAD,CAAMW,KAAMH,GACV,kBAAC,IAAD,CAAOI,MAAOH,EAAQI,gBAAgBD,QACtC,4BAAKF,QAMM,0EAAGZ,CAAH,MAyDbgB,EAAa,YA+CJC,UAtGE,WACf,OACE,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GACN,OACE,kBAAC,IAAD,KACE,yCACA,oNAE8E,IAC5E,uBAAGP,KAAK,0BAAR,UAHF,4FAMA,8LAE0D,IACxD,uBAAGA,KAAK,gCAAR,aAHF,KAKA,4BACA,kBAACd,EAAD,KACE,kBAACU,EAAD,CACEC,KAAK,4CACLC,QAASS,EAAKC,aACdT,MAAM,qBAER,kBAACH,EAAD,CACEC,KAAK,6DACLC,QAASS,EAAKE,QACdV,MAAM,gCAER,kBAACH,EAAD,CACEC,KAAK,wCACLC,QAASS,EAAKG,SACdX,MAAM,iCAER,kBAACH,EAAD,CACEC,KAAK,qEACLC,QAASS,EAAKI,IACdZ,MAAM,yBAER,kBAACH,EAAD,CACEC,KAAK,oDACLC,QAASS,EAAKK,QACdb,MAAM,yBAER,kBAACH,EAAD,CAAeC,KAAK,yBAAyBC,QAASS,EAAKM,OAAQd,MAAM","file":"component---src-pages-projects-js-e76ddffaa9e672569732.js","sourcesContent":["import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\nimport styled from \"styled-components\";\nimport { media } from \"../utils/style_helpers\";\n\nimport Layout from \"../components/layout\";\n\nconst ProjectList = styled.ul`\n  list-style: none;\n  margin: 0;\n  display: flex;\n  width: 100%;\n  height: auto;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Link = styled.a`\n  display: block;\n  transition: transform 200ms;\n  text-decoration: none;\n\n  .gatsby-image-wrapper {\n    transition: opacity 200ms;\n    opacity: 1;\n  }\n\n  :hover {\n    transform: scale(1.1);\n    z-index: 1;\n\n    .gatsby-image-wrapper {\n      opacity: 0.6;\n    }\n  }\n`;\n\nconst ProjectItem = styled.li`\n  border-radius: 100%;\n  width: 100%;\n  margin: 10px;\n\n  ${media.medium`\n    width: 45%\n  `}\n\n  ${media.large`\n    width: 40%\n  `}\n\n  h4 {\n    margin: 5px 0 0;\n    text-align: center;\n  }\n`;\n\nconst Project = ({ link, imgData, title }) => {\n  return (\n    <ProjectItem>\n      <Link href={link}>\n        <Image fluid={imgData.childImageSharp.fluid} />\n        <h4>{title}</h4>\n      </Link>\n    </ProjectItem>\n  );\n};\n\nconst StyledProject = styled(Project)``;\n\nconst Projects = () => {\n  return (\n    <StaticQuery\n      query={projectsQuery}\n      render={data => {\n        return (\n          <Layout>\n            <h1>Portfolio</h1>\n            <p>\n              The projects I've worked on can basically be broken down into two categories: web development projects and\n              personal computer graphics projects. Occasionally there is overlap, as with{\" \"}\n              <a href=\"https://echoes.cbc.ca/\">Echoes</a>, but for the most part I've only documented my computer\n              graphics projects on this page.\n            </p>\n            <p>\n              For the past few months I've been working on writing small, mostly self-contained examples for different\n              rendering techniques. They are open souced on GitHub in{\" \"}\n              <a href=\"https://github.com/bruop/bae\">this repo</a>.\n            </p>\n            <p></p>\n            <ProjectList>\n              <StyledProject\n                link=\"https://github.com/bruop/bae#tone-mapping\"\n                imgData={data.tone_mapping}\n                title=\"HDR Tone Mapping\"\n              />\n              <StyledProject\n                link=\"https://github.com/bruop/bae#forward-vs-deferred-rendering\"\n                imgData={data.forward}\n                title=\"Forward Rendering of Sponza\"\n              />\n              <StyledProject\n                link=\"https://github.com/bruop/bae#deferred\"\n                imgData={data.deferred}\n                title=\"Deferred Rendering of Sponza\"\n              />\n              <StyledProject\n                link=\"https://github.com/bruop/bae#physically-based-image-based-lighting\"\n                imgData={data.ibl}\n                title=\"Image Based Lighting\"\n              />\n              <StyledProject\n                link=\"https://github.com/bruop/bae#cascaded-shadow-maps\"\n                imgData={data.shadows}\n                title=\"Cascaded Shadow Maps\"\n              />\n              <StyledProject link=\"https://echoes.cbc.ca/\" imgData={data.echoes} title=\"Echoes\" />\n            </ProjectList>\n          </Layout>\n        );\n      }}\n    />\n  );\n};\n\nconst projectsQuery = graphql`\n  query ProjectsQuery {\n    echoes: file(absolutePath: { regex: \"/echoes.png/\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    tone_mapping: file(absolutePath: { regex: \"/01-tonemapping.png/\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    forward: file(absolutePath: { regex: \"/02-forward-rendering.png/\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    deferred: file(absolutePath: { regex: \"/03-deferred.png/\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    ibl: file(absolutePath: { regex: \"/04-pbr-ibl.png/\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    shadows: file(absolutePath: { regex: \"/05-shadow-mapping.png/\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`;\n\nexport default Projects;\n"],"sourceRoot":""}