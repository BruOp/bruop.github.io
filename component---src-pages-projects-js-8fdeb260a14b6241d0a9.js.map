{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["ProjectList","styled","ul","Link","a","ProjectItem","li","media","medium","large","StyledProject","link","imgData","title","href","fluid","childImageSharp","projectsQuery","Projects","query","render","data","tone_mapping","forward","deferred","ibl","shadows","echoes"],"mappings":"iYAQA,IAAMA,EAAcC,IAAOC,GAAV,wEAAGD,CAAH,4HAWXE,EAAOF,IAAOG,EAAV,iEAAGH,CAAH,wMAoBJI,EAAcJ,IAAOK,GAAV,wEAAGL,CAAH,4FAKbM,IAAMC,OALO,KASbD,IAAME,MATO,MA8BXC,EAAgBT,aAXN,SAAC,GAA8B,IAA5BU,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAChC,OACE,kBAACR,EAAD,KACE,kBAACF,EAAD,CAAMW,KAAMH,GACV,kBAAC,IAAD,CAAOI,MAAOH,EAAQI,gBAAgBD,QACtC,4BAAKF,QAMM,0EAAGZ,CAAH,MAyDbgB,EAAa,YA+CJC,UAtGE,WACf,OACE,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GACN,OACE,kBAAC,IAAD,KACE,yCACA,oNAE8E,IAC5E,uBAAGP,KAAK,0BAAR,UAHF,4FAMA,8LAE0D,IACxD,uBAAGA,KAAK,gCAAR,aAHF,KAKA,4BACA,kBAACd,EAAD,KACE,kBAACU,EAAD,CACEC,KAAK,4CACLC,QAASS,EAAKC,aACdT,MAAM,qBAER,kBAACH,EAAD,CACEC,KAAK,6DACLC,QAASS,EAAKE,QACdV,MAAM,gCAER,kBAACH,EAAD,CACEC,KAAK,wCACLC,QAASS,EAAKG,SACdX,MAAM,iCAER,kBAACH,EAAD,CACEC,KAAK,qEACLC,QAASS,EAAKI,IACdZ,MAAM,yBAER,kBAACH,EAAD,CACEC,KAAK,oDACLC,QAASS,EAAKK,QACdb,MAAM,yBAER,kBAACH,EAAD,CAAeC,KAAK,yBAAyBC,QAASS,EAAKM,OAAQd,MAAM","file":"component---src-pages-projects-js-8fdeb260a14b6241d0a9.js","sourcesContent":["import React from \"react\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport Image from \"gatsby-image\";\r\nimport styled from \"styled-components\";\r\nimport { media } from \"../utils/style_helpers\";\r\n\r\nimport Layout from \"../components/layout\";\r\n\r\nconst ProjectList = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  display: flex;\r\n  width: 100%;\r\n  height: auto;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  display: block;\r\n  transition: transform 200ms;\r\n  text-decoration: none;\r\n\r\n  .gatsby-image-wrapper {\r\n    transition: opacity 200ms;\r\n    opacity: 1;\r\n  }\r\n\r\n  :hover {\r\n    transform: scale(1.1);\r\n    z-index: 1;\r\n\r\n    .gatsby-image-wrapper {\r\n      opacity: 0.6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProjectItem = styled.li`\r\n  border-radius: 100%;\r\n  width: 100%;\r\n  margin: 10px;\r\n\r\n  ${media.medium`\r\n    width: 45%\r\n  `}\r\n\r\n  ${media.large`\r\n    width: 40%\r\n  `}\r\n\r\n  h4 {\r\n    margin: 5px 0 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Project = ({ link, imgData, title }) => {\r\n  return (\r\n    <ProjectItem>\r\n      <Link href={link}>\r\n        <Image fluid={imgData.childImageSharp.fluid} />\r\n        <h4>{title}</h4>\r\n      </Link>\r\n    </ProjectItem>\r\n  );\r\n};\r\n\r\nconst StyledProject = styled(Project)``;\r\n\r\nconst Projects = () => {\r\n  return (\r\n    <StaticQuery\r\n      query={projectsQuery}\r\n      render={data => {\r\n        return (\r\n          <Layout>\r\n            <h1>Portfolio</h1>\r\n            <p>\r\n              The projects I've worked on can basically be broken down into two categories: web development projects and\r\n              personal computer graphics projects. Occasionally there is overlap, as with{\" \"}\r\n              <a href=\"https://echoes.cbc.ca/\">Echoes</a>, but for the most part I've only documented my computer\r\n              graphics projects on this page.\r\n            </p>\r\n            <p>\r\n              For the past few months I've been working on writing small, mostly self-contained examples for different\r\n              rendering techniques. They are open souced on GitHub in{\" \"}\r\n              <a href=\"https://github.com/bruop/bae\">this repo</a>.\r\n            </p>\r\n            <p></p>\r\n            <ProjectList>\r\n              <StyledProject\r\n                link=\"https://github.com/bruop/bae#tone-mapping\"\r\n                imgData={data.tone_mapping}\r\n                title=\"HDR Tone Mapping\"\r\n              />\r\n              <StyledProject\r\n                link=\"https://github.com/bruop/bae#forward-vs-deferred-rendering\"\r\n                imgData={data.forward}\r\n                title=\"Forward Rendering of Sponza\"\r\n              />\r\n              <StyledProject\r\n                link=\"https://github.com/bruop/bae#deferred\"\r\n                imgData={data.deferred}\r\n                title=\"Deferred Rendering of Sponza\"\r\n              />\r\n              <StyledProject\r\n                link=\"https://github.com/bruop/bae#physically-based-image-based-lighting\"\r\n                imgData={data.ibl}\r\n                title=\"Image Based Lighting\"\r\n              />\r\n              <StyledProject\r\n                link=\"https://github.com/bruop/bae#cascaded-shadow-maps\"\r\n                imgData={data.shadows}\r\n                title=\"Cascaded Shadow Maps\"\r\n              />\r\n              <StyledProject link=\"https://echoes.cbc.ca/\" imgData={data.echoes} title=\"Echoes\" />\r\n            </ProjectList>\r\n          </Layout>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst projectsQuery = graphql`\r\n  query ProjectsQuery {\r\n    echoes: file(absolutePath: { regex: \"/echoes.png/\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    tone_mapping: file(absolutePath: { regex: \"/01-tonemapping.png/\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    forward: file(absolutePath: { regex: \"/02-forward-rendering.png/\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    deferred: file(absolutePath: { regex: \"/03-deferred.png/\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    ibl: file(absolutePath: { regex: \"/04-pbr-ibl.png/\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n    shadows: file(absolutePath: { regex: \"/05-shadow-mapping.png/\" }) {\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Projects;\r\n"],"sourceRoot":""}